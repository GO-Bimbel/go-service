## @params.replicaCount: The desired number of replicas for the Deployment.
## This doesnt require if @params.autoscaling.enabled is true
##
replicaCount: 1
## @params.type: Type of deployment
## Acceptance value: deployment, statefulset, daemonset, cronjob.
type: cronjob
## Application image version
##
image: 
  ## @params.image.registry: Image registry
  ## default: REGISTRY_NAME
  ##
  registry: 518200711443.dkr.ecr.ap-southeast-1.amazonaws.com
  ## @params.image.repository: Image repository
  ## [efault: REPOSITORY_NAME/app_image
  ## 
  repository: rencana-kerja-cron
  ## @skip image.tag: image tag (immutable tags are recommended)
  ## Overrides the image tag whose default is the chart appVersion.
  ##
  tag:
  ## @params.image.pullPolicy: Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ##
  pullPolicy: IfNotPresent
  ## @params.image.pullSecrets: Specify docker-registry secret names as an array
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## E.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
## @param nameOverride String to partially override fullname template (will maintain the release name)
##
nameOverride: "data-karyawan-cron"
## @param fullnameOverride: String to fully override fullname template
##
fullnameOverride: ""
## @params.updateStrategy: Update Strategy
## Acceptance values: RollingUpdate, Recreate
## e.g:
##  updateStrategy:
##    rollingUpdate:
##      maxUnavailable: 1
##    type: RollingUpdate
##
## Configuration for CronJob
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
##
cronjob:
  ## @params.cronjob.schedule: The schedule in Cron format for the job.
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#cron-schedule-syntax
  ## Example: "*/5 * * * *" (Runs every 5 minutes)
  ##
  schedule: "0 7 * * 1-5"
  ## @params.cronjob.timezone: The timezone used for scheduling the job.
  ## If not set, the default timezone "Asia/Jakarta" will be used.
  ## Example: "UTC", "America/New_York"
  ##
  timezone: "Asia/Jakarta"
  ## @params.cronjob.ttlSecondsAfterFinished: The time-to-live (TTL) for the job after it finishes.
  ## The job and its associated Pods will be deleted after this time.
  ## Set to 0 to disable TTL (job will persist after completion).
  ## Example: 100 (Job will be deleted 100 seconds after completion)
  ##
  ttlSecondsAfterFinished: 300
  ## @params.cronjob.successfulJobsHistoryLimit: The number of successful jobs to retain in the history.
  ## Older successful jobs will be cleaned up automatically.
  ## Example: 5 (Keeps 5 successful job histories)
  ##
  successfulJobsHistoryLimit: 3
  ## @params.cronjob.failedJobsHistoryLimit: The number of failed jobs to retain in the history.
  ## Older failed jobs will be cleaned up automatically.
  ## Example: 5 (Keeps 5 failed job histories)
  ##
  failedJobsHistoryLimit: 1
  ## @params.cronjob.restartPolicy: The restart policy for the job's Pods.
  ## Possible values: "Always", "OnFailure", "Never"
  ## Default is "OnFailure", which restarts the Pod if it fails.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
  ##
  restartPolicy: "OnFailure"
  ##
updateStrategy:
## @params.labels: Add labels to all the deployed resources
##
labels:
  app:
  name:
  role: http
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}
## Service account to use.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @params.serviceAccount.create: Specifies whether a service account should be created
  ##
  create: false
  ## @params.serviceAccount.automountServiceAccountToken: Automatically mount a ServiceAccount's API credentials
  automountServiceAccountToken: false
  ## @params.serviceAccount.annotations: Additional custom annotations for the ServiceAccount
  ##
  annotations: {}
  ## @params.serviceAccount.name: The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""
## @params.podAnnotations Annotations for Application pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @params.podSecurityContext.enabled Enabled Application pods' Security Context
## @params.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
## @params.podSecurityContext.sysctls Set kernel settings using the sysctl interface
## @params.podSecurityContext.supplementalGroups Set filesystem extra groups
## @params.podSecurityContext.fsGroup Set Application pod's Security Context fsGroup
##
podSecurityContext:
  enabled: false
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1000
## Ingress configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress
ingress:
  ## @param ingress.enabled Enable ingress resource
  ##
  enabled: false
  ## @param ingress.className Ingress class that will to be used to implement the Ingress
  ##
  className: "nginx"
  ## @param ingress.annotations [object]. Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.hostname Default host for the ingress resource
  ##
  hostname: chart-example.local
  ## @param ingress.path Ingress Path
  ##
  path: /
  ## @param ingress.pathType Ingress path type
  pathType: ImplementationSpecific
  ## @param ingress.tls Enable TLS Configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can:
  ##   - Use the `ingress.secret` parameter 
  tls: true
  ## @params.ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
  ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @params.ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## extraHosts:
  ## - name: nginx.local
  ##   path: /
  ##
  extraHosts: []
  ## @params.ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## - name: nginx.local-tls
  ##   key:
  ##   certificate:
  ##
  secrets: []
  ## @params.ingress.extraRules The list of additional rules to be added to this ingress record. Evaluated as a template
  ## Useful when looking for additional customization, such as using different backend
  ##
  extraRules: []
  ## @params.ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## extraTls:
  ## - hosts:
  ##     - nginx.local
  ##   secretName: nginx.local-tls
  ##
  extraTls: []
## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:
  ## @param autoscaling.enabled Enable autoscaling for application
  ##
  enabled: false
  ## @param autoscaling.minReplicas Minimum number of replicas
  ##
  minReplicas: 2
  ## @param autoscaling.maxReplicas Maximum number of replicas
  ##
  maxReplicas: 100
  ## @param autoscaling.targetCPU Target CPU utilization percentage
  ##
  targetCPU: 80
  ## @param autoscaling.targetMemory Target Memory utilization percentage
  ##
  targetMemory: 80
  ## HPA Scaling Behavior
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
  ##
  behavior:
    ## HPA behavior when scaling down
    ## e.g:
    ## Policy to scale one pod in 300s
    ## - type: Pods
    ##   value: 1
    ##   periodSeconds: 300
    ##
    scaleDown:
      ## @param autoscaling.behavior.scaleDown.policies [array] HPA scaling policies when scaling down
      ##
      policies:
      ## @param autoscaling.behavior.scaleDown.stabilizationWindowSeconds The number of seconds for which past recommendations should be considered while scaling down
      ##
      stabilizationWindowSeconds:
      ## @param autoscaling.behavior.scaleDown.selectPolicy The priority of policies that the autoscaler will apply when scaling down
      ##
      selectPolicy:
    ## HPA behavior when scaling up
    ## e.g:
    ## Policy to scale 20% of the pod in 60s
    ## - type: Percent
    ##   value: 20
    ##   periodSeconds: 60
    ##
    scaleUp:
      ## @param autoscaling.behavior.scaleUp.policies [array] HPA scaling policies when scaling up
      ##
      policies:
      ## @param autoscaling.behavior.scaleUp.stabilizationWindowSeconds The number of seconds for which past recommendations should be considered while scaling up
      ##
      stabilizationWindowSeconds:
      ## @param autoscaling.behavior.scaleUp.selectPolicy The priority of policies that the autoscaler will apply when scaling up
      ##
      selectPolicy:
## @params.volumes: Optionally specify extra list of additional volumes for pods
##
volumes: 
  - name: config
    secret: 
      defaultMode: 420
      secretName: data-karyawan-cron
## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
## @params.additionalSecrets add Secret to Application Pods
##
additionalSecrets: 
  .env: REJfSE9TVD1tYXN0ZXItYXVyb3JhLXByb3h5LnByb3h5LWM5aWpkOXhpc2EwZS5hcC1zb3V0aGVhc3QtMS5yZHMuYW1hem9uYXdzLmNvbQpEQl9OQU1FPWRiX2dvCkRCX1BBU1M9ODVmZWM0OTJhNmFjNTMwMApEQl9QT1JUPTU0MzIKREJfVVNFUj1nb2JpbWJlbF9tYXN0ZXIKCkRCX0hPU1RfS0JNPXRyYW5zYWN0aW9uLWF1cm9yYS1wcm94eS5wcm94eS1jOWlqZDl4aXNhMGUuYXAtc291dGhlYXN0LTEucmRzLmFtYXpvbmF3cy5jb20KREJfUE9SVF9LQk09NTQzMgpEQl9VU0VSX0tCTT1nb2JpbWJlbF90cmFuc2FjdGlvbgpEQl9QQVNTX0tCTT1lMmIyNTkwZTE5YWY1YTY3CkRCX05BTUVfS0JNPWRiX2tibQo=
## @params.additionalConfigMap add ConfigMap to Application Pods
##
additionalConfigMap: {}
## @params.container Container Configuration
##
container:
  ## @params.container.port Container Application Port
  ##
  port: 3000
  ## @params.container.additionalPort Additional container port
  ##
  additionalPort: []
  ## @params.container.env Container Environment Variables
  ##
  env: []
  ## @params.container.envFrom Container Environment Variable where is from
  ## Recomendded if using secrets and/or configmaps
  ##
  envFrom: []
  ## @params.container.args Override CMD
  ##
  args: []
  ## @params.container.command Override CMD
  command: ["sh", "-c", "./cmd/data-karyawan/main"]
  ## @params.container.service Container Service Parameters
  ##
  service:
    ## @params.container.service.type Service type
    ##
    type: ClusterIP
    ## @params.container.service.port Service Port
    ##
    port: 80
    ## @params.container.service.nodePort Node Port
    ## Note: choose port between <30000-32767>
    ##
    nodePort: ""
    ## @params.container.service.clusterIP service ClusterIP
    ##
    clusterIP: ""
    ## @params.container.service.loadBalancerIP IP for LoadBalancer
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP:
    ## @params.container.service.loadBalancerSourceRanges Service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @params.container.service.externalTrafficPolicy Service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @params.container.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## @params.container.additionalService Add New Container Service
  ##
  additionalService: []
  ## @param resources Set container requests and limits for different resources like CPU or memory
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Container Security Context (only main container)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param containerSecurityContext.enabled Enabled containers' Security Context
  ## @param containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param containerSecurityContext.privileged Set container's Security Context privileged
  ## @param containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param containerSecurityContext.capabilities.add List of capabilities to be added
  ## @param containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  securityContext:
    enabled: false
    seLinuxOptions: {}
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param volumeMounts Optionally specify extra list of additional volumeMounts for Application container(s)
  ##
  volumeMounts: 
    - name: config
      mountPath: /app/.env
      subPath: .env
  ## @param lifecycle LifecycleHooks to set additional configuration at startup
  ##
  lifecycle: {}
  ## Configure extra options for Application containers' liveness, readiness, and startup probes
  ##
  livenessProbe: {}
    # failureThreshold: 3
    # httpGet:
    #   path: /health
    #   port: http
    # initialDelaySeconds: 5
    # periodSeconds: 10
    # timeoutSeconds: 10
  ## @param readinessProbe.enabled Enable readinessProbe
  ##
  readinessProbe: {}
    # failureThreshold: 3
    # httpGet:
    #   path: /health
    #   port: http
    # initialDelaySeconds: 5
    # periodSeconds: 10
    # timeoutSeconds: 10
  startupProbe: {}
    # failureThreshold: 3
    # httpGet:
    #   path: /health
    #   port: http
    # initialDelaySeconds: 5
    # periodSeconds: 10
    # timeoutSeconds: 10
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
podDisruptionBudget:
  ## @param pdb.create Enable/disable a Pod Disruption Budget creation
  ##
  create: false
  ## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ##
  # minAvailable:
  ## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  # maxUnavailable: 1
## @params.verticalPodAutoscaler VerticalPodAutoscaling configuration
## ref: https://github.com/kubernetes/autoscaler/blob/master/vertical-pod-autoscaler/README.md
##
verticalPodAutoscaler:
  ## @params .Values.verticalPodAutoscaler.enabled
  ## Enable VPA Controller
  enabled: false
  ## @params .Values.verticalPodAutoscaler.updateMode 
  ## Update Policy for VPA Controller
  ## default: Auto
  updateMode:
## @params.gateway Istio Gateway Configuration
##
gateway:
  ## @params.gateway.enabled Enables the Istio Gateway.
  ##
  enabled: false
  ## @params.gateway.namespace Optionally specify the namespace for the Gateway.
  ##
  namespace:
  ## @params.gateway.annotations Add annotations, e.g., for external DNS.
  ##
  annotations: {}
  ## @params.gateway.selector Define which pods will be selected for this Gateway (usually the ingressgateway pod).
  ##
  selector: ""
  ## @params.gateway.hosts List of hosts for which this Gateway will route traffic.
  ##
  hosts: []
  ## @params.gateway.tls TLS Configuration for gateway
  ##
  tls:
    ## @params.gateway.tls.enabled Enables TLS for the Gateway.
    ##
    enabled: false
    ## @params.gateway.tls.secretName Specify the secret name for the TLS certificate (required for termination).
    ##
    secretName:
    ## @params.gateway.tls.minProtocolVersion Set the minimum TLS protocol version
    ## default: TLSv1_2
    ##
    minProtocolVersion:
    ## @params.gateway.tls.maxProtocolVersion Set the maximum TLS protocol version
    ## default: TLSv1_3
    ##
    maxProtocolVersion:
    ## @params.gateway.tls.mode TLS Mode for terminating TLS
    ## default: SIMPLE
    mode:
## @params.virtualService  Istio Virtual Service Configuration
##
virtualService:
  ## @params.virtualService.enabled Enables the virtual service istio
  ##
  enabled: false
  ## @params.virtualService.http HTTP Configuration for Virtual Service
  ## @params.virtualService.route Routing Configuration for HTTP
  ## @params.virtualService.destination Target Destination for Routing
  ## @params.virtualService.destination.host The service host to route traffic to
  ## @params.virtualService.destination.port.number The port number of the service.
  ##
  http:
    headers:
  ## @params.virtualService.tls Configuration for TLS Traffic (if applicable)
  ##
  tls:
  ## @params.virtualService.tcp Configuration for TCP Traffic (if applicable)
  ##
  tcp:
## @params.cert Certificate Configuration
##
cert:
  ## @params.cert.create Create Certificate
  ##
  create: false
  ## @params.cert.dnsNames List of DNS Names that applicable for this certificate
  ##
  dnsNames: []
  ## @params.cert.issuerRef Configure for issuer for this certificate
  ## @params.cert.issuerRef.name Name the issuer
  ## @params.cert.issuerRef.kind Kind the issuer
  ## @params.cert.issuerRef.group Group the issuer
  issuerRef:
    name:
    kind:
    group:
  ## @params.cert.duration Duration for expiration certificate
  duration:
  ## @params.cert.renewBefore Renew Time Before Expiration
  renewBefore:
## Network Policy configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: false
  ## @param networkPolicy.kubeAPIServerPorts [array] List of possible endpoints to kube-apiserver (limit to your cluster settings to increase security)
  ##
  kubeAPIServerPorts: [443, 6443, 8443]
  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the ports the application is listening
  ## on. When true, the app will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: false
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: false
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraEgress: []
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
## Metrics Parameters
##
metrics:
  ## @params metrics.enabled Start a prometheus exporter
  ##
  enabled: false
  ## @params.containerPorts.metrics Prometheus exporter metrics container port
  ##
  containerPorts:
    metrics: 9090
  ## @params.service.port Prometheus exporter metrics service port
  service:
    port: 8080
  ## Prometheus Operator Service Monitor Configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ##
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
    ## @param metrics.serviceMonitor.labels Additional labels that can be used so PodMonitor will be discovered by Prometheus
    ##
    labels: {}
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false
  ## Prometheus Operator PrometheusRule configuration
  ##
  prometheusRule:
    ## @param metrics.prometheusRule.enabled if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)
    ##
    enabled: false
    ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
    ##
    namespace: ""
    ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
    ##
    additionalLabels: {}
    ## @param metrics.prometheusRule.rules Prometheus Rule definitions
    ##   - alert: LowInstance
    ##     expr: up{service="{{ template "go-chart.fullname" . }}"} < 1
    ##     for: 1m
    ##     labels:
    ##       severity: critical
    ##     annotations:
    ##       description: Service {{ template "go-chart.fullname" . }} Tomcat is down since 1m.
    ##       summary: Tomcat instance is down.
    ##
    rules: []
